% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/algorithm.function.R
\name{perform_CDA}
\alias{perform_CDA}
\title{Coordinate Descent Algorithm (CDA) for Penalized Regression}
\usage{
perform_CDA(
  X,
  y,
  method,
  lambda,
  learning_rate = 0.01,
  max_iter = 1000,
  alpha = 0.5,
  gamma = 3.7
)
}
\arguments{
\item{X}{A numeric matrix of predictors (n x p).}

\item{y}{A numeric response vector of length n.}

\item{method}{A character string specifying the penalty method: "lasso",
"ridge", "elasticnet", "scad", or "mcp".}

\item{lambda}{A non-negative regularization parameter.}

\item{learning_rate}{A learning rate parameter (currently not used in CDA,
but reserved for consistency).}

\item{max_iter}{An integer specifying the maximum number of iterations.}

\item{alpha}{Elastic Net mixing parameter (0 <= alpha <= 1). Used only when
\code{method = "elasticnet"}.}

\item{gamma}{A tuning parameter for SCAD and MCP (typically >= 3).}
}
\value{
A numeric vector of estimated regression coefficients of length p.
}
\description{
This function implements the Coordinate Descent Algorithm (CDA) for solving
penalized regression problems, supporting LASSO, Ridge, Elastic Net, SCAD,
and MCP penalties.
}
