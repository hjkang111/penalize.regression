% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/algorithm.function.R
\name{perform_LLA}
\alias{perform_LLA}
\title{Local Linear Approximation (LLA) Algorithm for Penalized Regression}
\usage{
perform_LLA(
  X,
  y,
  method,
  lambda,
  learning_rate = 0.01,
  max_iter = 100,
  alpha = 0.5,
  gamma = 3.7
)
}
\arguments{
\item{X}{A numeric matrix of predictors (n x p).}

\item{y}{A numeric response vector of length n.}

\item{method}{A character string specifying the penalty method: "lasso", "ridge", "elasticnet", "scad", or "mcp".}

\item{lambda}{A non-negative regularization parameter.}

\item{learning_rate}{A numeric learning rate controlling the update step size (default: 0.01).}

\item{max_iter}{An integer specifying the maximum number of iterations.}

\item{alpha}{Elastic Net mixing parameter (0 <= alpha <= 1). Used only when \code{method = "elasticnet"}.}

\item{gamma}{A tuning parameter for SCAD and MCP (typically >= 3).}
}
\value{
A numeric vector of estimated regression coefficients of length p.
}
\description{
This function implements the Local Linear Approximation (LLA) algorithm for solving penalized regression problems, supporting LASSO, Ridge, Elastic Net, SCAD, and MCP penalties.
}
